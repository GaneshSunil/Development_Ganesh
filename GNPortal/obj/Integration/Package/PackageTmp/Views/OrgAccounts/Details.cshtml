@model GenomeNext.Data.EntityModel.GNAccount

@{
    ViewBag.Title = "Account";
}

<h2>
    <span class="glyphicon glyphicon-euro gn-green"></span>
    @ViewBag.Title

    <span class="pull-right">
        @Html.BootstrapActionButton("Back to List", "Index", "OrgAccounts", null, "info", "chevron-left")
        @Html.BootstrapActionButton("Audit", "Index", "Audit", new RouteValueDictionary(new { searchEntityId = Model.Id, searchEntityType = "ORG_ACCOUNT" }), "info", "eye-open", "sm")
        @Html.BootstrapActionButton("Edit", "Edit", "OrgAccounts", new RouteValueDictionary(new { id = Model.Id }), "warning", "cog")
    </span>
</h2>
@Html.BootstrapRowSpacer()

@using (Html.BeginForm())
{
    <div class="form-horizontal">

        @Html.BootstrapRowSpacer()

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Organization)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Organization.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.AccountType)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.AccountType.Description)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.BillingMode)
            </dt>

            <dd>
                @if (Model.BillingMode == GenomeNext.Data.EntityModel.GNAccount.BillingModeType.INVOICE.GetCode())
                {
                    @GenomeNext.Data.EntityModel.GNAccount.BillingModeType.INVOICE.GetName()
                }
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DefaultDiscountAmount)
            </dt>

            <dd>
                @if(Model.DefaultDiscountType == GenomeNext.Data.EntityModel.GNAccount.DiscountType.PERCENT.GetCode())
                {
                    @Html.DisplayFor(model => model.DefaultDiscountAmount)<span>%</span>
                }
                else
                {
                    <span>$</span>@Html.DisplayFor(model => model.DefaultDiscountAmount)
                }
            </dd>

            @Html.DisplayFieldFor(model => model.MaxBalanceAllowed)
            @Html.DisplayFieldFor(model => model.ValidBillingAgreementRequired)
            @Html.DisplayFieldFor(model => model.TotalAmountPaid)
            @Html.DisplayFieldFor(model => model.TotalAmountOwed)
            @Html.DisplayFieldFor(model => model.AvailableCreditsDisplay)

            <dt>
                @Html.DisplayNameFor(model => model.AccountOwner)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.AccountOwner.FullNameWithEmail)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.BillingContact)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.BillingContact.FullNameWithEmail)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MailingContact)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MailingContact.FullNameWithEmail)
            </dd>

            @{
                ViewData["ViewMode"] = "Details";
                ViewData["CreatedBy"] = Model.CreatedByContact;
                ViewData["CreateDateTime"] = Model.CreateDateTime;
            }
            @Html.Partial("_AuditModelPartial", null, ViewData)

            <dt>
                @Html.DisplayNameFor(model => model.PaymentMethods)
            </dt>

            <dd>
                @if (Model.CanEdit)
                {
                    <p>
                        @Html.BootstrapActionButton("Add Payment Method", "Create", "PaymentMethods", new RouteValueDictionary(new { accountId = Model.Id }), "info", "plus", "sm")
                    </p>
                }
                @if (Model.PaymentMethods != null && Model.PaymentMethods.Count != 0)
                {
                    <div class="table-responsive">
                        <table class="table table-hover table-bordered table-gn">
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.PaymentMethods.FirstOrDefault().PaymentMethodType)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PaymentMethods.FirstOrDefault().Description)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PaymentMethods.FirstOrDefault().IsDefault)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PaymentMethods.FirstOrDefault().IsActive)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PaymentMethods.FirstOrDefault().UsedForRecurrentPayments)
                                </th>
                                <th class="col-md-3"></th>
                            </tr>

                            @foreach (var item in Model.PaymentMethods)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PaymentMethodType.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Description)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.IsDefault)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.IsActive)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.UsedForRecurrentPayments)
                                    </td>
                                    <td class="text-center">
                                        @Html.BootstrapActionButton("View", "Details", "PaymentMethods", new RouteValueDictionary(new { id = item.Id, accountId = Model.Id }), "success", "th", "sm")
                                        @Html.BootstrapActionButton("Edit", "Edit", "PaymentMethods", new RouteValueDictionary(new { id = item.Id, accountId = Model.Id }), "warning", "cog", "sm")
                                        @Html.BootstrapActionButton("Delete", "Delete", "PaymentMethods", new RouteValueDictionary(new { id = item.Id, accountId = Model.Id }), "danger", "trash", "sm")
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                }
                else
                {
                    <div class="row">
                        <div class="col-md-12">
                            No payment methods exist for this Account.
                        </div>
                    </div>
                }
            </dd>
@{/*
            <dt>
                @Html.DisplayNameFor(model => model.AccountProductSubscriptions)
            </dt>

            <dd>
                @if (Model.AccountProductSubscriptions != null && Model.AccountProductSubscriptions.Count != 0)
                {
                    <div class="table-responsive">
                        <table class="table table-hover table-bordered table-gn">
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.AccountProductSubscriptions.FirstOrDefault().CreateDateTime)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.AccountProductSubscriptions.FirstOrDefault().Product)
                                </th>
                                <th>
                                    Dates
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.AccountProductSubscriptions.FirstOrDefault().SubscribeFrequency)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.AccountProductSubscriptions.FirstOrDefault().CurrentValueUsed)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.AccountProductSubscriptions.FirstOrDefault().IsActive)
                                </th>
                                <th class="col-md-3"></th>
                            </tr>

                            @foreach (var item in Model.AccountProductSubscriptions.OrderByDescending(id => id.CreateDateTime))
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CreateDateTime)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Product.Name)
                                    </td>
                                    <td>
                                        @item.StartDate.ToShortDateString()
                                        -
                                        @item.EndDate.ToShortDateString()
                                    </td>
                                    <td>
                                        @(((GenomeNext.Data.EntityModel.GNAccountProductSubscription.SubscriptionFrequencyInterval)item.SubscribeFrequency).ToString())
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CurrentValueUsed)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.IsActive)
                                    </td>
                                    <td class="text-center">
                                        @Html.BootstrapActionButton("View", "Details", "OrgAccountProductSubscriptions", new RouteValueDictionary(new { id = item.Id, accountId = Model.Id }), "success", "th", "sm")
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                }
                else
                {
                    <div class="row">
                        <div class="col-md-12">
                            No subscriptions exist for this Account.
                        </div>
                    </div>
                }

            </dd>
*/}
        </dl>

    </div>
}
