@model GenomeNext.Data.EntityModel.GNProject
@{
    ViewBag.CanExportAnalysisReport = ((GenomeNext.Portal.Controllers.BaseController)this.ViewContext.Controller).EvalCanExportAnalysisReport();        
}
@using (Html.BeginGNPanel())
{
    //Heading
    using (Html.BeginGNPanelHeading("Analyses"))
    {
        <img class="pull-left"
             style="margin:0px;padding:0px 10px 0px 0px;max-height:30px;max-width:30px;"
             src="@Url.Content("~/Content/icons/analyses_white.png")" />
        <span class="badge">@Model.AnalysisRequests.Count</span>
        <span class="pull-right">
            @if ((bool)ViewBag.CanExportAnalysisReport)
            {
                @Html.BootstrapActionIconLink("Export Analysis Report", "ExportAnalysisReport", "AnalysisRequests", new RouteValueDictionary(new { projectId = Model.Id }), "white", "list-alt", null, false, false)
            }
            @if ((bool)ViewBag.CanCreateAnalysisRequest)
            {
                <span>&nbsp;</span>
                @Html.BootstrapActionIconLink("New Analysis", "Create", "AnalysisRequests", new RouteValueDictionary(new { projectId = Model.Id }), "white", "plus", null, false, false)
            }
        </span>
    }

    //Body
    using (Html.BeginGNPanelBody(true))
    {
        if (Model.AnalysisRequests != null && Model.AnalysisRequests.Count != 0)
        {
            int i = 0;
            foreach (var item in Model.AnalysisRequests.OrderByDescending(a => a.CreateDateTime).Take(5))
            {
                using (Html.BeginGNClickableListGroupItem(
                    Url.Action("Details", "AnalysisRequests", new { id = item.Id, projectId = Model.Id }),
                    (i % 2) != 0))
                {
                    <img class="pull-left flushTop"
                         style="margin:0px;padding:0px 10px 0px 0px;max-height:30px;max-width:30px;"
                         src="@Url.Content("~/Content/icons/analyses.png")" />
                    <h5 class="flushLeft flushTop" style="padding-top:3px !important">
                        @item.Description
                    </h5>
                    <p class="small text-inline text-padded-right">
                        <span class="text-muted text-uppercase">@(item.CurrentProgress + "%")</span> Complete
                    </p>
                    <p class="small text-inline">
                        <span class="text-muted text-uppercase">@((item.AnalysisResult != null) ? item.AnalysisResult.ResultFiles.Count : 0)</span> Result Files
                    </p>
                    <p class="small text-inline">
                        @Html.Raw((item.RequestDateTime.HasValue) ? " received on <span class=\"text-muted text-uppercase\">" + item.RequestDateTime.Value.ToShortDateString() + "</span>" : "")
                    </p>
                }
                i++;
            }
        }
        else
        {
            <div class="list-group-item">
                <h5>
                    Analyses have not been created for this project.
                </h5>
            </div>
        }
    }

    if (Model.AnalysisRequests != null && Model.AnalysisRequests.Count > 5)
    {
        using (Html.BeginGNPanelFooter())
        {
            <div class="col-md-12 text-center">
                @Html.ActionLink("View All Analyses", "Index", "AnalysisRequests", new { projectId = Model.Id, teamId = Model.Teams.Select(t=>t.Id).FirstOrDefault() }, null)
            </div>
        }
    }
}