@model GenomeNext.Data.EntityModel.GNNotificationTopic

@{
    ViewBag.Title = "Details";
}

<script src="//cdn.ckeditor.com/4.4.5/full-all/ckeditor.js"></script>


<h2>
    <span class="glyphicon glyphicon-envelope gn-green"></span>
    @ViewBag.Title
    <span class="pull-right">
        @if (!string.IsNullOrEmpty(Request["organizationId"]))
        {
            @Html.BootstrapActionButton("Back to List", "Index", "NotificationTopics", new RouteValueDictionary(new { organizationId = Request["organizationId"] }), "info", "chevron-left")
            @Html.Raw("&nbsp;")
            @Html.BootstrapActionButton("Edit", "Edit", "NotificationTopics", new RouteValueDictionary(new { id = Model.Id, organizationId = Request["organizationId"] }), "warning", "cog", null)
        }
        else
        {
            @Html.BootstrapActionButton("Back to List", "Index", "NotificationTopics", null, "info", "chevron-left")
            @Html.Raw("&nbsp;")
            @Html.BootstrapActionButton("Edit", "Edit", "NotificationTopics", new RouteValueDictionary(new { id = Model.Id }), "warning", "cog", null)
        }
    </span>
</h2>

@Html.BootstrapRowSpacer()
@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <div class="form-group">
            @Html.BootstrapRowSpacer()
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Code)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Code)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Title)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Title)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Description)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Description)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Format)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Format)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Sender)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Sender)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Priority)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Priority)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Subject)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Subject)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Message)
                </dt>

                <dd>
                    <div class="col-md-11">
                        <textarea name="Message" id="Message" rows="20" cols="50" disabled>
                            @Model.Message
                        </textarea>
                        <script type="text/javascript">
                            CKEDITOR.config.toolbarCanCollapse = true;
                            CKEDITOR.config.toolbarStartupExpanded = false;
                            CKEDITOR.config.toolbar_Basic;
                            CKEDITOR.replace('Message');
                        </script>
                    </div>
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.IsSubscriptionOptional)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.IsSubscriptionOptional)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Status)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Status)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.CreatedBy)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.CreatedBy)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.CreateDateTime)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.CreateDateTime)
                </dd>

            </dl>
        </div>
    </div>
}