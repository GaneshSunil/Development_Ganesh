@model GenomeNext.Data.EntityModel.GNPaymentMethod

@{
    ViewBag.Title = "Add New Payment Method";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h2>
        <span class="glyphicon glyphicon-th gn-green"></span>
        @ViewBag.Title
        <span class="pull-right">
            @Html.BootstrapActionButton("Back to Account", "Edit", "OrgAccounts", new RouteValueDictionary(new { id = Model.GNAccountId }), "info", "chevron-left")
            @Html.BootstrapFormSaveButton("Add","plus")
        </span>
    </h2>

    @Html.BootstrapRowSpacer()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.GNAccountId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Account.Organization.Name)
                @Html.HiddenFor(model => model.GNAccountId)
                @Html.ValidationMessageFor(model => model.GNAccountId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GNPaymentMethodTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GNPaymentMethodTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GNPaymentMethodTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsDefault, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsDefault)
                    @Html.ValidationMessageFor(model => model.IsDefault, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UsedForRecurrentPayments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.UsedForRecurrentPayments)
                    @Html.ValidationMessageFor(model => model.UsedForRecurrentPayments, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
}