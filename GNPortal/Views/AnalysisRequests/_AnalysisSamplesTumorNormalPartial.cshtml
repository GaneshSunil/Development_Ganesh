@model GenomeNext.Data.EntityModel.GNAnalysisRequest

@{
    bool isDelete = (ViewBag.IsDelete != null) ? (bool)ViewBag.IsDelete : false;
}

@using (Html.BeginGNPanel())
{
    //Heading
    using (Html.BeginGNPanelHeading("Samples", ""))
    {
        <img class="pull-left" style="height:18px;padding-right:6px;" 
             src="@Url.Content("~/Content/icons/samples_white.png")" />
        if (Model.GNAnalysisRequestGNSamples.Count != 0)
        {
            <span class="badge">@Model.GNAnalysisRequestGNSamples.Count</span>
        }
    }

    //Body
    using (Html.BeginGNPanelBody(true))
    {
        <div id="tumor_sample_block" style="height:70px;margin:10px;margin-top:15px;margin-bottom:25px;">
            <div class="badge col-md-12" style="text-align:left;padding:5px;">&nbsp;Normal Sample</div>
             @{
                int i = 0;
                foreach (var item in Model.GNAnalysisRequestGNSamples.Where(a => a.GNSample.GNSampleQualifierCode == "DNA"))
                {
                    <div class="col-md-12 border-gn-light-gray">

                        <div style="padding:0px;" class="col-md-10">
                            <img class="pull-left" style="height:14px;padding-right:6px;"
                                 src="@Url.Content("~/Content/icons/samples.png")" />
                            <p class="small text-inline">
                                <a href="@Url.Action("Details", "Samples", new RouteValueDictionary(new { id = item.GNSample.Id }))">
                                    @item.GNSample.Name
                                </a>
                                <br />@item.GNSample.SampleType.Name, @item.GNSample.ReadTypeDescription, @item.GNSample.CloudFiles.Count files
                            </p>

                            <p class="small text-inline alert-danger">
                                <br />
                                @if (item.GNSample.CloudFiles.Count == 0)
                                { <span class="glyphicon glyphicon-remove"></span><span>&nbsp;No files associated.</span><br /> }
                                @if (!item.GNSample.IsReady)
                                { <span class="glyphicon glyphicon-remove"></span><span>&nbsp;Marked as "incomplete upload".</span><br /> }
                                @if (!item.GNSample.IsValidPairEnded)
                                {<span class="glyphicon glyphicon-remove"></span><span>&nbsp;Invalid paired-end set of files.</span> }
                                @if (!item.GNSample.IsValidSingleEnded)
                                {<span class="glyphicon glyphicon-remove"></span><span>&nbsp;Invalid single-end set of files.</span> }
                            </p>
                        </div>
                        
                        @if(Model.AnalysisStatus.Count == 0)
                        {
                        <div id="remove_@item.GNSample.Id" style="display:none">
                            <div class="col-md-2" style="padding:0;">
                                @Html.BootstrapActionIconLink("Remove", "RemoveFromAnalysisRequest", "Samples", new RouteValueDictionary(new { id = item.GNSample.Id, analysisRequestId = Model.Id, returnToAnalysis = true }), "red", "trash", "md")
                                <a href="javascript:toggleConfirmDeletion('@item.GNSample.Id')" class="btn gray btn-sm" style="text-align:center" title="Cancel" alt="Cancel"><span class="glyphicon glyphicon-remove"></span></a>
                            </div>
                        </div>

                        <div id="confirm_remove_@item.GNSample.Id">
                            <div class="col-md-2" style="padding:0;">
                                @Html.BootstrapActionIconLink("See Sample Details", "Details", "Samples", new RouteValueDictionary(new { id = item.GNSample.Id }), "gray", "th-large", null, false, false, true)
                                <a href="javascript:toggleConfirmDeletion('@item.GNSample.Id')" class="btn gray btn-sm" style="text-align:center" title="Remove from Analysis" alt="Remove from Analysis"><span class="glyphicon glyphicon-trash"></span></a>
                            </div>
                        </div>
                        }
                    </div>
                                i++;
                }

                if (i == 0)
                {
                    <div class="col-md-12 label-danger alert-danger" style="height:60px;padding:15px;">

                        <div style="padding:0px;" class="col-md-10">
                            No Normal Sample found.
                        </div>

                        <div>
                            <div class="col-md-2" style="padding:0;">
                                @Html.BootstrapActionIconLink("Associate Existing Samples", "List", "Samples", new RouteValueDictionary(new { analysisRequestId = Model.Id, GNSampleTypeId = Model.AnalysisType.Id, GNSampleQualifierCode = "DNA", projectId = Model.GNProjectId, teamId = Request["teamId"] }), "bg-clear black", "link")
                                &nbsp;
                                @Html.BootstrapActionIconLink("Create New Sample", "Create", "Samples", new RouteValueDictionary(new { analysisRequestId = Model.Id, analysisTypeId = Model.AnalysisType.Id, GNSampleQualifierCode = "DNA", projectId = Model.GNProjectId, teamId = Request["teamId"] }), "bg-clear black", "plus")
                            </div>
                        </div>
                    </div>
                }
            }
            </div>

            <div id="tumor_sample_block" style="height:70px;margin:10px;margin-top:15px;margin-bottom:25px;">
                <div class="badge col-md-12" style="text-align:left;padding:5px;">&nbsp;Tumor Sample</div>
                @{
                    i = 0;
                    foreach (var item in Model.GNAnalysisRequestGNSamples.Where(a => a.GNSample.GNSampleQualifierCode == "TUMOR"))
                    {
                        <div class="col-md-12 border-gn-light-gray">

                            <div style="padding:0px;" class="col-md-10">
                                <img class="pull-left" style="height:14px;padding-right:6px;"
                                        src="@Url.Content("~/Content/icons/samples.png")" />
                                <p class="small text-inline">
                                    <a href="@Url.Action("Details", "Samples", new RouteValueDictionary(new { id = item.GNSample.Id }))">
                                        @item.GNSample.Name
                                    </a>

                                    <br />@item.GNSample.SampleType.Name, @item.GNSample.ReadTypeDescription, @item.GNSample.CloudFiles.Count files
</p>

                                <p class="small text-inline alert-danger">
                                    <br />
                                    @if (item.GNSample.CloudFiles.Count == 0)
                                    { <span class="glyphicon glyphicon-remove"></span><span>&nbsp;No files associated.</span><br /> }
                                    @if (!item.GNSample.IsReady)
                                    { <span class="glyphicon glyphicon-remove"></span><span>&nbsp;Marked as "incomplete upload".</span><br /> }
                                    @if (!item.GNSample.IsValidPairEnded)
                                    {<span class="glyphicon glyphicon-remove"></span><span>&nbsp;Invalid paired-end set of files.</span> }
                                    @if (!item.GNSample.IsValidSingleEnded)
                                    {<span class="glyphicon glyphicon-remove"></span><span>&nbsp;Invalid single-end set of files.</span> }
                                </p>
                            </div>

                        @if(Model.AnalysisStatus.Count == 0)
                        {
                            <div id="remove_@item.GNSample.Id" style="display:none">
                                <div class="col-md-2" style="padding:0;">
                                    @Html.BootstrapActionIconLink("Remove", "RemoveFromAnalysisRequest", "Samples", new RouteValueDictionary(new { id = item.GNSample.Id, analysisRequestId = Model.Id, returnToAnalysis = true }), "red", "trash", "md")
                                    <a href="javascript:toggleConfirmDeletion('@item.GNSample.Id')" class="btn gray btn-sm" style="text-align:center" title="Cancel" alt="Cancel"><span class="glyphicon glyphicon-remove"></span></a>
                                </div>
                            </div>

                            <div id="confirm_remove_@item.GNSample.Id">
                                <div class="col-md-2" style="padding:0;">
                                    @Html.BootstrapActionIconLink("See Sample Details", "Details", "Samples", new RouteValueDictionary(new { id = item.GNSample.Id }), "gray", "th-large", null, false, false, true)
                                    <a href="javascript:toggleConfirmDeletion('@item.GNSample.Id')" class="btn gray btn-sm" style="text-align:center" title="Remove from Analysis" alt="Remove from Analysis"><span class="glyphicon glyphicon-trash"></span></a>
                                </div>
                            </div>
                        }
                        </div>
                        i++;
                    }

                    if (i == 0)
                    {
                        <div class="col-md-12 label-danger alert-danger" style="height:60px;padding:15px;">

                            <div style="padding:0px;" class="col-md-10">
                                No Tumor Sample found.
                            </div>

                            <div>
                                <div class="col-md-2" style="padding:0;">
                                    @Html.BootstrapActionIconLink("Associate Existing Samples", "List", "Samples", new RouteValueDictionary(new { analysisRequestId = Model.Id, GNSampleTypeId = Model.AnalysisType.Id, GNSampleQualifierCode = "TUMOR", projectId = Model.GNProjectId, teamId = Request["teamId"] }), "bg-clear black", "link")
                                    &nbsp;
                                    @Html.BootstrapActionIconLink("Create New Sample", "Create", "Samples", new RouteValueDictionary(new { analysisRequestId = Model.Id, analysisTypeId = Model.AnalysisType.Id, GNSampleQualifierCode = "TUMOR", projectId = Model.GNProjectId, teamId = Request["teamId"] }), "bg-clear black", "plus")
                                </div>
                            </div>
                        </div>
                    }
}
            </div>
    }
}