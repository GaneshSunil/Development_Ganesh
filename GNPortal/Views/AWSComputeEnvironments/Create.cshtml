@model GenomeNext.Data.EntityModel.AWSComputeEnvironment

@{
    ViewBag.Title = "Create New AWS Compute Environment";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h2>
        <span class="glyphicon glyphicon-cloud gn-green"></span>
        @ViewBag.Title
        <span class="pull-right">
            @Html.BootstrapActionButton("Back to List", "Index", "AWSComputeEnvironments", null, "info", "chevron-left")
            @Html.BootstrapFormSaveButton("Create")
        </span>
    </h2>

    @Html.BootstrapRowSpacer()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.FormFieldFor(model => model.Id,labelCols:2,fieldCols:10)

        <div class="form-group">
            @Html.LabelFor(model => model.AWSConfigId, "AWSConfigId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AWSConfigId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AWSConfigId, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.FormFieldFor(model => model.VPC, labelCols: 2, fieldCols: 10)
        @Html.FormFieldFor(model => model.Subnet, labelCols: 2, fieldCols: 10)
        @Html.FormFieldFor(model => model.AvailZone, labelCols: 2, fieldCols: 10)
        @Html.FormFieldFor(model => model.MaxInstanceRequiredPerAnalysis, labelCols: 2, fieldCols: 10)
        @Html.FormFieldFor(model => model.MaxInstanceExpectedCount, labelCols: 2, fieldCols: 10)


    </div>
}